panel.grid.minor.y = element_blank(),
# modify text, axis and colour 4) and 5)
axis.text = element_text(colour = "black", face = "italic", family = "Arial"),
axis.title = element_text(colour = "black", family = "Arial"),
axis.ticks = element_line(colour = "black"),
# legend at the bottom 6)
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white"),
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = loess,
method.args = list(family = "symmetric"),
se = FALSE) +
ggtitle('Test Title')
empire_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "Arial"
),
axis.title = element_text(colour = "black", family = "Arial"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white"),
strip.background = element_rect(fill="#228b22"),
strip.text = element_text(size=15, colour="white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = loess,
method.args = list(family = "symmetric"),
se = FALSE) +
ggtitle('Test Title')
empire_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "Arial"
),
axis.title = element_text(colour = "black", family = "Arial"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white"),
strip.background = element_rect(fill="#228b22"),
strip.text = element_text(size=15, colour="white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = loess,
method.args = list(family = "symmetric"),
se = FALSE) +
ggtitle('Test Title')
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm)
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm, se = FALSE)
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm, se = FALSE) +
# geom_smooth(method = loess,
# method.args = list(family = "symmetric"),
# se = FALSE) +
ggtitle('Test Title')
empire_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "Arial"
),
axis.title = element_text(colour = "black", family = "Arial"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm, se = FALSE) +
# geom_smooth(method = loess,
# method.args = list(family = "symmetric"),
# se = FALSE) +
ggtitle('Test Title')
df <- mtcars %>%
mutate(cylinders = as.factor(cyl))
empire_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "Arial"
),
axis.title = element_text(colour = "black", family = "Arial"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm, se = FALSE) +
# geom_smooth(method = loess,
# method.args = list(family = "symmetric"),
# se = FALSE) +
ggtitle('Test Title')
windowsFonts()
empire_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "Arial"
),
axis.title = element_text(colour = "black", family = "TT Arial"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm, se = FALSE) +
# geom_smooth(method = loess,
# method.args = list(family = "symmetric"),
# se = FALSE) +
ggtitle('Test Title')
empire_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "TT Arial"
),
axis.title = element_text(colour = "black", family = "TT Arial"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm, se = FALSE) +
# geom_smooth(method = loess,
# method.args = list(family = "symmetric"),
# se = FALSE) +
ggtitle('Test Title')
windowsFonts()
empire_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "sans"
),
axis.title = element_text(colour = "black", family = "sans"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm, se = FALSE) +
# geom_smooth(method = loess,
# method.args = list(family = "symmetric"),
# se = FALSE) +
ggtitle('Test Title')
library(ggplot2)
library(dplyr)
df <- mtcars %>%
mutate(cylinders = as.factor(cyl))
empire_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "sans"
),
axis.title = element_text(colour = "black", family = "sans"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
empire_theme() +
geom_smooth(method = lm, se = FALSE) +
# geom_smooth(method = loess,
# method.args = list(family = "symmetric"),
# se = FALSE) +
ggtitle('Test Title')
plain_theme <- function() {
theme(
# add border 1)
panel.border = element_rect(
colour = "black",
fill = NA,
linetype = 1
),
panel.background = element_blank(),
panel.grid.major.x = element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(
colour = "grey",
linetype = 3,
size = 0.5
),
panel.grid.minor.y = element_blank(),
axis.text = element_text(
colour = "black",
face = "italic",
family = "sans"
),
axis.title = element_text(colour = "black", family = "sans"),
axis.ticks = element_line(colour = "black"),
legend.position = "right",
legend.key = element_rect(fill = "white", colour = "white")
)
}
df %>% ggplot(aes(x = mpg, y = hp, color = cylinders, shape = cylinders)) +
geom_point() +
geom_jitter() +
plain_theme() +
geom_smooth(method = lm, se = FALSE) +
# geom_smooth(method = loess,
# method.args = list(family = "symmetric"),
# se = FALSE) +
ggtitle('Test Title')
require(WeibullR)
pump<-read.csv("C:/Users/9553/git/weibull/data/pump.csv", header=T)$pump
dafit<-wblr(pump, label="implement pump")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=3000, col="orange", lty=5, lwd=2)
abline(v=10500, col="orange", lty=5, lwd=2)
require(WeibullR)
pump<-read.csv("C:/Users/9553/git/weibull/data/pump.csv", header=T)$pump
dafit<-wblr(pump, label="implement pump")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=3000, col="orange", lty=5, lwd=2)
abline(v=10500, col="orange", lty=5, lwd=2)
require(WeibullR)
pump<-read.csv("C:/Users/9553/git/weibull/data/pump.csv", header=T)$pump
dafit<-wblr(pump, label="implement pump")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=000, col="orange", lty=5, lwd=2)
abline(v=10500, col="orange", lty=5, lwd=2)
require(WeibullR)
pump<-read.csv("C:/Users/9553/git/weibull/data/pump.csv", header=T)$pump
dafit<-wblr(pump, label="implement pump")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=000, col="orange", lty=5, lwd=2)
abline(v=10500, col="orange", lty=5, lwd=2)
require(WeibullR)
pump<-read.csv("C:/Users/9553/git/weibull/data/pump.csv", header=T)$pump
dafit<-wblr(pump, label="implement pump")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=2000, col="orange", lty=5, lwd=2)
abline(v=10500, col="orange", lty=5, lwd=2)
require(WeibullR)
pump<-read.csv("C:/Users/9553/git/weibull/data/pump.csv", header=T)$pump
dafit<-wblr(pump, label="implement pump")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=2000, col="orange", lty=5, lwd=2)
abline(v=9000, col="orange", lty=5, lwd=2)
library(dplyr)
library(lubridate)
library(RODBC)
library(data.frame)
install.packages('data.frame')
library(data.frame)
v1 <- c(1,2,3,4,6,7)
class(v1)
list(v1)
class(list(v1))
as.matrix(c(1,2,3,4))
seq(1,5, by =1)
seq(0,4, by =1)
10 ^ seq(0,4, by =1)
seq(1,5 by = 1) * 10 ^ seq(0,4, by =1)
seq(1,5 by = 1) %.*% 10 ^ seq(0,4, by =1)
seq(1,5, by = 1) %% 10 ^ seq(0,4, by =1)
seq(1,5, by = 1) %*% 10 ^ seq(0,4, by =1)
seq(1,5, by = 1) * 10 ^ seq(0,4, by =1)
devtools::install_github("mikey-harper/example-rmd-templates")
devtools::install_github("elias-jhsph/rsmartsheet", upgrade="never")
?rsmartsheet
??rsmartsheet
library(rsmartsheet)
set_smartsheet_api_key("r72jm0erjduk4o2au6g3p9vglp")
remove.packages("rsmartsheet", lib="~/R/win-library/4.0")
setwd("C:/Users/9553/git/WeibullR.gallery")
require(WeibullR)
agc<-read.csv("data/994-wheels.csv", header=T)$agc
dafit<-wblr(agc, label="994 Wheels")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=107, col="orange", lty=5, lwd=2)
setwd("C:/Users/9553/git/WeibullR.gallery/data")
require(WeibullR)
agc<-read.csv("994-wheels.csv", header=T)$agc
dafit<-wblr(agc, label="994 Wheels")
require(WeibullR)
agc<-read.csv("994-wheels.csv", header=T)$agc
dafit<-wblr(agc, label="994-wheels")
require(WeibullR)
agc<-read.csv("994-wheels.csv", header=T)$wheels
dafit<-wblr(agc, label="994-wheels")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=107, col="orange", lty=5, lwd=2)
abline(v=1750, col="orange", lty=5, lwd=2)
require(WeibullR)
agc<-read.csv("994-wheels.csv", header=T)$wheels
dafit<-wblr(agc, label="994-wheels")
dafit<-wblr.fit(dafit,col="red")
plot(dafit, main="Bathtub Life Data")
abline(v=3000, col="orange", lty=5, lwd=2)
abline(v=8061, col="orange", lty=5, lwd=2)
